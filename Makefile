.PHONY: dev test migrate create-migration rollback-migration setup-db seed-db clean install run frontend setup start stop restart logs migration test test-backend test-frontend help

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
export GO_ENV=development
export NODE_ENV=development

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
DOCKER_COMPOSE = docker-compose
BACKEND_DIR = backend
FRONTEND_DIR = frontend

# –ó–∞–ø—É—Å–∫ –±—ç–∫–µ–Ω–¥–∞ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
dev:
	@echo "–ó–∞–ø—É—Å–∫ –±—ç–∫–µ–Ω–¥–∞ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	cd backend && go run cmd/main.go

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
test: test-backend test-frontend

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –±—ç–∫–µ–Ω–¥–∞
test-backend:
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –±—ç–∫–µ–Ω–¥–∞..."
	@cd backend && go test ./...

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
test-frontend:
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
	@cd frontend && npm test

# –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π
migrate:
	@echo "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
	cd backend && go run cmd/migrate/main.go up

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏
create-migration:
	@if [ "$(name)" = "" ]; then \
		echo "–û—à–∏–±–∫–∞: –£–∫–∞–∂–∏—Ç–µ –∏–º—è –º–∏–≥—Ä–∞—Ü–∏–∏ (make create-migration name=–∏–º—è_–º–∏–≥—Ä–∞—Ü–∏–∏)"; \
		exit 1; \
	fi
	@echo "–°–æ–∑–¥–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ $(name)..."
	cd backend && go run cmd/migrate/main.go create $(name)

# –û—Ç–∫–∞—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–π –º–∏–≥—Ä–∞—Ü–∏–∏
rollback-migration:
	@echo "–û—Ç–∫–∞—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–π –º–∏–≥—Ä–∞—Ü–∏–∏..."
	cd backend && go run cmd/migrate/main.go down

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
setup-db:
	@echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
	cd backend && go run scripts/setup_db.go

# –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
seed-db:
	@echo "–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏..."
	cd backend && go run scripts/seed_db.go

# –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
clean:
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö..."
	cd backend && go run scripts/clean_db.go
	@$(DOCKER_COMPOSE) down -v
	@rm -rf $(BACKEND_DIR)/migrations/*.sql
	@echo "‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω—ã!"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install:
	@echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –±—ç–∫–µ–Ω–¥–∞..."
	cd backend && go mod download
	@echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
	cd frontend && npm install

# –ó–∞–ø—É—Å–∫ –≤—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
run:
	@echo "–ó–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞..."
	make -j2 dev frontend

# –ó–∞–ø—É—Å–∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
frontend-dev:
	@echo "–ó–∞–ø—É—Å–∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
	cd frontend && npm run dev

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
setup:
	@echo "üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."
	@mkdir -p $(BACKEND_DIR)/migrations
	@if [ ! -f $(BACKEND_DIR)/.env.development ]; then \
		echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ .env.development..."; \
		cp $(BACKEND_DIR)/.env.example $(BACKEND_DIR)/.env.development; \
		echo "‚úÖ .env.development —Å–æ–∑–¥–∞–Ω"; \
	else \
		echo "‚ÑπÔ∏è .env.development —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"; \
	fi
	@if [ ! -f $(BACKEND_DIR)/.env.test ]; then \
		echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ .env.test..."; \
		cp $(BACKEND_DIR)/.env.example $(BACKEND_DIR)/.env.test; \
		echo "‚úÖ .env.test —Å–æ–∑–¥–∞–Ω"; \
	else \
		echo "‚ÑπÔ∏è .env.test —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"; \
	fi
	@if [ ! -f $(BACKEND_DIR)/.env.production ]; then \
		echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ .env.production..."; \
		cp $(BACKEND_DIR)/.env.example $(BACKEND_DIR)/.env.production; \
		echo "‚úÖ .env.production —Å–æ–∑–¥–∞–Ω"; \
	else \
		echo "‚ÑπÔ∏è .env.production —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"; \
	fi
	@echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
	@$(DOCKER_COMPOSE) up postgres
	@echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
	@sleep 5
	@$(DOCKER_COMPOSE) up backend
	@echo "‚úÖ –ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!"
	@echo "üìù –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ —Ñ–∞–π–ª–∞—Ö .env.* –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ"

# –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
start:
	@echo "üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
	@$(DOCKER_COMPOSE) up

# –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
build:
	@echo "üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
	@$(DOCKER_COMPOSE) up --build

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
stop:
	@echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
	@$(DOCKER_COMPOSE) down

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
restart: stop start

# –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤
logs:
	@$(DOCKER_COMPOSE) logs -f

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏
migration:
	@if [ -z "$(name)" ]; then \
		echo "‚ùå –û—à–∏–±–∫–∞: —É–∫–∞–∂–∏—Ç–µ –∏–º—è –º–∏–≥—Ä–∞—Ü–∏–∏ (make migration name=–∏–º—è_–º–∏–≥—Ä–∞—Ü–∏–∏)"; \
		exit 1; \
	fi
	@echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ $(name)..."
	@cd $(BACKEND_DIR) && go run cmd/migrate/create.go $(name)
	@echo "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!"

# –ü–æ–º–æ—â—å
help:
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@echo "  make setup          - –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞"
	@echo "  make start         - –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
	@echo "  make stop          - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
	@echo "  make restart       - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
	@echo "  make logs          - –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
	@echo "  make clean         - –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö"
	@echo "  make migration     - –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏"
	@echo "  make test          - –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤"
	@echo "  make test-backend  - –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –±—ç–∫–µ–Ω–¥–∞"
	@echo "  make test-frontend - –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞"
	@echo "  make help          - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É" 