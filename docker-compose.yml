version: "3.8"

services:
  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: parents_children_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - go_modules:/go/pkg/mod
    ports:
      - "8080:8080"
    environment:
      - APP_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=parents_children_dev
      - DB_SSL_MODE=disable
      - JWT_SECRET=your_development_secret_key
      - JWT_EXPIRATION=24h
      - PORT=8080
      - MIGRATION_PATH=/app/migrations
    depends_on:
      postgres:
        condition: service_healthy

  # test:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile.test
  #   volumes:
  #     - ./backend:/app
  #     - go_modules:/go/pkg/mod
  #   environment:
  #     - APP_ENV=test
  #     - DB_HOST=postgres
  #     - DB_PORT=5432
  #     - DB_USER=postgres
  #     - DB_PASSWORD=postgres
  #     - DB_NAME=parents_children_test
  #     - DB_SSL_MODE=disable
  #     - JWT_SECRET=test_secret_key
  #     - JWT_EXPIRATION=24h
  #     - PORT=8081
  #     - MIGRATION_PATH=./migrations
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   command: go test ./tests/... -v

volumes:
  postgres_data:
  go_modules:
